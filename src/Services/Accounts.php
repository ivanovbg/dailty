<?phpnamespace App\Services;use App\Entity\Account;use App\Entity\Message;class Accounts extends Service{    public function getAccount(){        $account = false;        if($this->isLogged()){            if(!$this->container->get('session')->has('account_id')){                $this->container->get('session')->set('account_id', $this->isLogged());            }            $account = $this->entityManager->getRepository(Account::class)->findOneBy(['id' => $this->isLogged()]);        }        return $account;    }    public function unReadMessages(){        if(!$this->isLogged()){            return 0;        }        $counter = $this->entityManager->getRepository(Message::class)->unReadMessagesCount($this->getAccount());        return $counter;    }    //check exist session or cookie and return account_id    private function isLogged(){        $account = false;        if($this->container->get('session')->has('account_id')){            $account = (int)$this->container->get('session')->get('account_id');        }elseif($this->request->cookies->has("account_id")){            $account = $this->decodeAccountCookie();        }        return $account;    }    //decode account cookie and return account_id    private function decodeAccountCookie(){        return base64_decode(str_replace(sha1($this->settings->account_cookie_hash)."_", "", $this->request->cookies->get("account_id")));    }}